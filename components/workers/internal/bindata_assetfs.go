// Code generated by go-bindata.
// sources:
// templates/views/manager.html
// assets/js/manager.min.js
// locales/ru/LC_MESSAGES/config.mo
// locales/ru/LC_MESSAGES/manager.mo
// locales/ru/LC_MESSAGES/workers.mo
// DO NOT EDIT!

package internal

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsManagerHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x20\x58\x6c\x68\x1f\x14\x25\x6d\x07\x0c\xad\xed\x21\xe8\x36\xb4\x40\x56\x0c\x69\x86\x62\x4f\x01\x25\x9e\x2c\x26\x14\xa9\x91\x27\xd9\x86\x91\xef\x3e\xe8\x9f\x2d\xc9\x94\x1b\x6b\x4d\x91\x74\x79\x8a\x4c\xf2\xfe\xfd\xee\x78\xf7\xb3\xa3\xf5\x9a\x70\x88\x84\x02\x42\x43\xad\x10\x14\x52\x72\x7b\x7b\x34\xe1\x22\x27\xa1\x64\xd6\x4e\x69\xca\xe6\xe0\xa1\x40\x09\x74\x76\x44\x08\x21\xed\xcd\x72\xfd\x4a\x42\x84\xf5\x66\x79\x20\x7e\x35\x5b\xaf\x89\x38\xfd\x59\x11\xfa\x59\x9b\x1b\x30\x96\x92\x63\x72\x7b\x3b\xf1\xe3\x57\xb5\x12\x9f\x8b\x7c\x76\x34\xa0\xd0\x88\x79\xdc\xd1\xd8\x3a\x11\x69\x93\x78\x73\xa3\xb3\x94\xa4\x99\x94\x5e\xff\x6c\xff\xbc\x50\x69\x86\x95\x40\xef\x54\x79\x52\xb2\x00\xe4\xee\x7a\xb9\x57\x8a\x12\x5c\xa5\x30\xa5\x61\x0c\xe1\x4d\xa0\x97\xb4\xd1\x7b\x6d\x3d\xbb\x10\x18\xc6\x94\x08\x3e\xa5\x2c\x43\x6d\x20\x32\x60\x63\x4a\xfc\x19\xd9\x00\x70\xd6\xde\x28\x40\xd8\xf5\xc1\x77\x38\x51\x03\xe4\xf8\x58\x3f\x36\x08\xb6\x63\x0d\x25\x30\x13\x89\x25\x9d\xb9\x76\x8d\x5e\x10\xd4\xe9\x15\x0a\x09\xd6\x91\x4c\xa6\x44\xc2\x10\x38\x89\xa4\x48\x3f\xa8\xbf\x49\xa8\xa5\x27\xe7\xde\xeb\xf2\x21\xe1\xf5\x83\x4d\xea\x87\xa5\xf5\x4e\x5f\x0e\x64\xa9\xb0\xe1\x59\x64\x68\xf7\xa5\x26\xd4\x8a\xce\x26\x62\x93\x5a\x46\x22\xe6\x71\x60\x51\xf1\xf7\xa7\x32\x0c\x31\xeb\x21\xd1\x57\x12\xea\xac\xa8\xda\x22\x07\x52\x58\x04\x05\xc6\x7a\xd5\xe2\xec\xc4\x25\xdb\xae\xce\xf3\x46\xa2\x48\x0d\xad\xfc\xed\xd4\xa9\x1b\xfb\x07\x8a\x5c\x66\xc1\xd8\x71\xd0\x2d\xaa\x6b\x7a\x67\xe0\x5a\xd7\xfa\xd1\xc3\x86\xcc\xde\x8c\x84\xad\x14\xbd\x33\x68\x97\xc5\xe9\xc3\x20\xeb\xdc\xe3\x4e\x8d\x3b\x2e\xf0\xf2\x2a\x65\x0a\xe4\x00\x42\xcb\xab\x76\x17\xdf\x3a\xf8\xd2\x79\x03\x2b\x24\x88\xfb\xa6\x94\x7e\xbf\xec\x29\xca\x64\xa3\x45\xb1\x9c\x28\x96\x07\xcc\x54\xdd\x99\x94\x6e\x5d\xa1\xd6\xb2\xe8\xa0\xae\x2e\x2c\x66\x13\xb6\xc5\x57\x4a\x96\x5a\xf0\xa4\x50\x37\xbb\xe9\x0a\x63\xc8\x8d\x56\x5e\xd1\xcf\xab\x6c\xb1\xd9\xc4\x97\xc2\xa9\xb6\x11\xe5\x46\xa7\x5c\x2f\x94\xc3\x78\x79\x92\x91\xd8\x40\x34\xa5\xcf\x68\x5f\xc2\x43\x3d\x9f\x4b\xa0\x84\x33\x64\xf5\x87\x96\x3e\x62\x74\xf1\x39\xc8\x10\xb5\xa2\x84\x19\xc1\x3c\x58\xa6\x4c\x71\xe0\x85\xc7\xd2\xc2\x6e\x08\x0b\x03\x2a\x8c\xb7\xee\xbb\x7d\xda\x02\xba\xf1\x25\x01\x95\x35\x26\xcb\x67\xb7\x68\x83\xe9\xe0\x66\x27\xe6\x6b\x96\x33\x1b\x1a\x91\xe2\x9b\x5c\x0b\xfe\xfc\xe4\x45\x2f\xd8\x44\x73\x26\x9b\x35\x66\xe6\x80\x53\xfa\xac\xbd\x58\x3e\x57\x24\x61\x4a\x37\x25\xf3\x4e\xab\x48\x98\x84\x18\x48\x74\x0e\x84\x49\x49\x64\xb7\x8a\x3a\xe2\x81\xe6\xab\x96\xf4\x67\x21\x25\x09\xc0\x29\x4d\x60\x19\x42\x8a\x05\x77\x61\x99\xc4\xcd\xc6\x31\x39\x33\x40\x56\x3a\x23\x36\x33\xf0\x8b\xc3\x48\xc8\xa4\x0c\x58\x78\xd3\xba\x48\x17\xa5\x81\xe7\x2f\xde\xee\x01\x73\x83\x59\xbf\x75\x18\x66\x63\x8f\x49\xec\x5f\x97\x8b\x8d\xd7\x03\x43\xbf\xa3\x75\xa8\x04\xaa\xcd\xa1\x44\x4e\xfc\xcc\xc1\x5c\x76\xcf\xef\x9e\xdb\xcb\x19\xb6\x62\xdd\x8f\x9d\x56\xd2\xb0\xc5\x61\xbd\xc8\x02\x09\x9e\x01\x9b\x6a\x65\x45\xde\xef\x3b\xe5\xf1\xf2\x4c\x47\x80\x54\x62\xb1\xce\xc1\xd4\xcf\x16\x8d\x48\x81\x13\x8e\x2d\x6d\x44\xe9\x85\x61\x29\x25\x16\x57\x45\xd1\x2d\x04\xc7\xf8\xcd\xe9\xc9\xc9\x0f\x43\x37\x1c\x63\x60\x7c\x68\xcf\xec\xc1\x1f\xe3\x6d\x07\xff\xf0\x6b\xd3\xfe\x30\xbe\xa3\xc8\x47\x96\xc0\xc1\x42\xbf\xe5\xa0\xd0\x1e\x2c\xf6\xbb\x30\x30\x4a\xca\x22\x89\x84\x01\x7e\xb0\xec\x39\x1b\x2d\x7a\x16\xa2\xd0\xea\x8b\xee\x4e\xfc\xa1\xec\x14\x32\xce\x9c\x4e\xfc\xb2\x72\xfe\x0b\xa1\x6e\x71\xa2\x7b\x1c\xb4\x25\x61\xeb\xb7\x8e\xfe\x37\xa6\xa7\x39\xfb\x1d\xcf\xd9\x36\xf7\xb6\xb1\x5e\x8c\x98\x41\xb0\x82\x7e\x09\x7d\x8a\xf5\xa2\x9c\x98\xd8\x30\xce\xfb\x99\x40\x5f\x37\xfe\x58\x70\xd7\x94\xb8\x43\xfc\x9e\x95\xcc\xc6\x7d\x14\xde\x0b\x0e\xdf\x10\x85\x4d\x11\x89\x5c\x70\x30\x74\xe0\xb2\xb4\x24\x1e\x1e\x3f\x5b\xb4\x7b\xcf\x00\x71\xaa\xcf\x3c\x5a\xda\x44\x1e\x64\xba\x9a\x4b\xc0\x38\x1f\x01\x68\x2a\xb3\x9d\x39\x72\xc6\x79\x9d\xcf\x27\x0a\xfa\xff\xa6\xa0\xef\x0c\x30\x1c\xc1\xd0\x3e\x21\xc3\xec\x70\x3e\x79\xae\xc3\x9b\x11\xd6\x2e\x99\xbd\xf9\xfe\x48\x64\x35\x7b\xee\x8f\x42\xd6\xfa\xbb\x57\xff\x72\x3b\xf0\x9e\x08\xe4\xf7\x4d\x20\xef\x89\x08\xb4\x28\xd3\x00\x0d\x28\x4f\x3c\x5a\x12\xf0\x34\xb8\x1e\xc3\xe0\x1a\xf5\xdb\xc9\x9f\x46\x68\x23\x70\x75\xb0\xe0\x05\xa4\xc0\x46\xfc\xea\x52\xc9\x11\xa1\x10\x4c\xce\xe4\xe1\x83\x4f\x24\xa0\x33\xfc\x96\x63\xdd\x3c\x7c\x3a\x70\x86\x08\x49\x3a\x22\x1d\x67\x52\xea\x05\xb1\x45\x90\x23\x7f\x0a\xb3\x23\x01\x2a\x7f\x0c\x1b\x2b\xfc\xa0\x99\x4c\xdd\x66\xca\x19\x40\x22\xc6\xa1\xfb\xcd\xbd\xf8\xd2\x52\x74\x1c\xa1\x38\x2c\xa7\xd4\x3b\x6d\x46\x1f\x17\x4c\xea\x79\x3d\x6d\x63\xc1\x39\xa8\x29\x45\x93\xb9\xde\x25\xa8\x06\x4c\x2d\xe1\xee\x9d\xf5\x0c\xfa\x62\xff\xac\xce\x15\x68\x14\x5f\xec\x76\x01\xa9\x48\x40\xfd\x9f\xfd\x86\x11\x6c\x7a\xba\xb6\x0d\x89\xe0\xc2\x26\x62\xa3\xd0\x19\xc6\x8f\x28\x12\xb0\x6f\x27\x7e\xa5\xc6\x61\x2c\x7e\xdd\x75\xab\x66\x76\x8e\xef\x69\x5b\xca\xf6\x7a\x6f\xb2\xdc\xe1\x06\x9a\xaf\x5c\xc1\x46\xda\x24\x03\x15\xe3\x7c\xad\x62\x2f\x55\x61\x01\x48\x12\x69\xd3\xc9\x7d\xfd\x0f\xd0\x2d\x2d\x54\x68\xb4\xf4\xca\xc3\xad\x40\x3f\x66\x49\x00\x86\x28\x58\x34\xf1\xbe\x69\x02\xde\xf3\x16\x46\x69\xb7\xfd\x26\x86\x2a\xd5\x50\x92\x08\x35\xa5\xa7\xb4\x13\x40\x6d\x7a\xa7\x3a\x1b\x0f\x73\x26\x33\x28\xa4\x86\xae\xd0\x0e\xce\xd5\xf2\x2e\x86\x77\x4a\x49\xa4\x35\x1e\x5e\x81\x01\x2a\x12\xa0\xf2\xea\xff\x6e\xb9\x6b\xb1\x35\x06\xaa\x82\xad\x80\x1c\xac\xc2\x8e\x41\x9b\x05\x89\xc0\x1d\x83\x36\x0b\x43\xb0\xf6\x4b\x06\xcf\x38\xdf\x67\xee\xae\x9d\x65\xbd\x26\xa0\x78\xc1\xef\x8e\x5a\xaf\x21\x15\x97\x96\x36\xa4\x6f\xbd\x2e\xda\x29\x8a\xf0\xfd\xe5\x1f\xe7\xe4\x79\xf5\xfc\xd7\xc5\x39\xa1\x3e\x67\x36\x0e\x34\x33\xdc\x67\xd6\x02\x5a\x3f\x07\xc5\xb5\xb1\x7e\xe1\x7b\xd9\xef\xec\xb1\x02\xf4\x02\xeb\x87\xb6\x5a\xbd\xac\x56\x03\xad\xd1\xa2\x61\xe9\x71\x22\xd4\x71\x58\xc4\x5b\xb2\xff\x17\x5f\xd1\xea\x96\x6c\x35\x0e\x6c\x57\xf6\x3b\xe0\x46\xe5\xda\x7e\x45\x4c\xfc\x6b\xeb\x5f\xff\x93\x81\x59\x1d\xb7\x60\x29\x7c\xb9\xbe\x0f\x2c\x02\x5b\x18\x1c\x4c\xc0\xbd\xd8\xdc\xa2\xdd\xb3\xdd\x4a\xc3\x37\x30\x5e\xc7\x3e\x98\xfb\x83\xcc\xd7\xed\xac\x31\x7e\x6d\xfd\x84\x29\x36\x07\x53\xaa\x29\xa6\x51\xb7\x80\xfe\x0d\x00\x00\xff\xff\x15\x5a\xb4\x9f\xdc\x27\x00\x00"

func templatesViewsManagerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsManagerHtml,
		"templates/views/manager.html",
	)
}

func templatesViewsManagerHtml() (*asset, error) {
	bytes, err := templatesViewsManagerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/manager.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsManagerMinJs = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5d\x6f\xdb\x3a\xd2\xfe\x2b\x3c\x6c\xdf\x48\x84\x65\xb9\x39\xef\x5e\x2c\x64\x49\x41\xd1\xe2\x00\x05\x8a\xdd\x83\x26\xc0\x5e\x24\x41\x40\x8b\x63\x9b\x27\xb4\x68\x90\x54\x5c\xc3\xd0\x7f\x5f\x90\x94\x25\xf9\xab\x4d\x9a\x8f\x3d\x37\x02\x45\x0e\x87\x0f\xc9\x99\x87\x33\xe4\xfb\x90\xc9\xa2\x5a\x40\x69\x48\xac\x80\xb2\x75\x38\xad\xca\xc2\x70\x59\x86\x64\xf3\x3e\xc4\xef\x56\x52\xdd\x83\xd2\x43\x3d\x97\x2b\x4c\xe2\x42\xf0\xe2\xfe\x84\x0c\x8a\x0d\xd5\xf7\x4e\x32\x99\x53\x1d\xf2\x78\x4a\x87\xb0\x06\xd2\xf6\x23\x35\x89\xfa\x4a\xe7\x9c\xc1\x2f\x2a\x1d\x6a\x41\xf5\xfc\xb4\x6a\xca\x18\x9a\x54\xc6\xc8\xf2\xda\xac\x97\x90\xe9\x6a\xb2\xe0\xe6\xf6\xe8\x68\x31\xfd\x8b\x7e\x0f\x37\x56\x2e\xc1\x7f\xfe\xfb\xf2\x0a\x47\x95\x12\x09\x1e\x35\xca\x46\x17\xd4\xc9\x66\x3d\xe5\x38\x62\xd4\xd0\x64\x53\xc8\xaa\x34\xc9\xde\xc8\x43\x57\x8b\x49\xfc\x40\x45\x48\xea\x48\x57\x45\x01\x5a\x27\xd5\x92\x51\x03\x35\xa9\xc9\xf8\x81\x2a\x64\xe8\x44\xc0\x57\xae\x0d\x94\xa0\x74\x66\x95\x88\xed\x9f\x6f\xc4\x24\x96\x65\x88\x99\xa2\xab\x98\x19\x1c\xb5\xa8\x21\xd2\x60\x0c\x2f\x67\x9a\x6c\xb6\xa5\xf8\x2f\x2d\xcb\xb3\xb3\x1d\x35\x2d\x12\x03\xdf\x4d\xb8\x23\x19\x2b\x28\xa4\x62\xfa\x4a\x1a\x2a\x48\x4d\xe2\xcf\xd4\xd0\x2b\x3b\x6a\xb8\x11\xb4\x9c\x55\x74\x06\xc9\xc6\x2f\x04\xa3\x7a\x3e\x91\x54\xb1\x91\x9d\xb5\x83\xa6\x47\xfc\xfc\x9f\xa5\xd3\x84\xeb\xc8\xae\xe0\x56\x78\x7f\xd5\xb4\xa1\x46\x9f\x41\x69\xb8\x59\x67\x2d\x32\xbf\x80\x97\xaa\x48\xb0\x2d\xe0\x3a\x2a\xa4\xa8\x16\xa5\x4e\xae\x37\x6e\x69\x31\x67\xb8\x8e\x9a\x72\x49\x17\xd0\xfd\xc1\x03\x94\x46\xe3\x48\x41\xc9\x40\x25\xed\xaa\xd8\xd6\xc8\x6e\x63\xa4\xe4\x8a\x6c\xec\x1a\x17\xb2\x34\x50\x9a\x0c\xe3\xf1\x54\xaa\xd0\x56\xb9\xde\x5f\x18\xe2\x25\xb2\x1d\x88\x92\xab\x58\xc8\xe2\x1e\xd8\x45\x23\x3d\xc8\x82\x54\x2f\x69\x89\x0a\x41\xb5\xce\xb0\xa0\x13\x10\xc8\x7d\x87\xbc\x9c\x4a\x9c\x07\x03\xdb\xf5\xba\x51\x75\x3b\xc0\xe9\xc8\x76\xc8\x11\x4e\x7a\x3a\x28\x9a\x2b\x98\x66\xf8\x1d\x46\x86\x1b\x01\x19\xfe\x06\x0b\xf9\xc0\xcb\x19\xda\xae\x03\x3e\x39\x86\x03\x37\x34\x72\x36\xb3\x1d\x17\x92\x51\xb1\xad\xa3\x6a\x06\x26\xc3\xef\xfa\x95\xae\x3c\x6c\x86\xf9\x24\xcb\x29\x57\x0b\xa4\xec\x70\xd0\x0e\x86\xde\x05\x03\x3b\x5b\xce\x06\x18\x4d\x65\xb3\x14\x08\xef\x4d\x26\xd8\x51\x59\x50\x21\x26\xb4\xb8\xcf\x70\xbb\x77\x6e\x16\x10\xde\x04\x9d\xba\x20\x42\x01\x1e\x34\x2a\x06\x38\x20\xe3\x1b\x9c\xef\x2b\xc6\xe8\x7b\x3a\xa2\x39\xc2\x63\x05\xa6\x52\xe5\x76\x77\xea\x76\x67\xa7\x5c\x81\xc6\xfd\x5f\x6d\xee\x6c\x25\xbb\xa3\xe6\xe8\x86\x03\xd9\x34\xca\xec\xcf\x85\xfd\x5c\xc9\x4b\xa3\x78\x39\xf3\xcd\x09\xc6\x9d\x7e\x41\x5f\x4a\x9f\x54\x0c\x94\x75\x84\xe4\xb7\x73\xcf\x05\x65\x25\xc4\xcf\x4c\xb2\x51\xdd\x33\x39\x8c\x93\x20\x65\xfc\x61\x6b\x07\x13\x53\x0e\x67\x4a\x56\x4b\xd4\x96\x86\xdf\x35\xce\x53\xcf\x66\xc8\xb1\x19\xf6\x3f\xb8\xd7\xc9\x89\x33\x5a\xce\x40\xb9\x22\x2f\x6c\xfb\xab\xda\x50\xe0\x6c\x88\x0a\x81\x1a\x87\x7c\xb2\xd9\x04\x37\x01\x19\xe3\x3c\xe5\xdb\x89\x4c\x29\x9a\xd2\xa1\x51\x54\xcf\x87\x54\x98\x5d\xbf\xe9\x40\xe8\xfd\x91\xf3\x74\xc4\xf3\x74\xe4\x97\x25\x4f\x47\x8c\x3f\xe4\x41\x5d\xdf\x46\x6e\x9b\x92\xeb\xeb\xf3\x08\x53\x5d\xe0\xdb\xe8\xfa\xf7\xa6\x74\x5b\x93\xc8\x31\xd9\x7f\x3c\x5f\x65\xfd\x53\xe7\x59\xec\xbb\x3d\x09\xfe\x6e\xdc\xdb\x34\x3e\x8d\x79\x0b\x05\xd4\x00\x7b\x84\xaf\xec\xba\x49\xe7\x73\x16\x43\xd5\x73\x6a\x6f\xf8\x87\x0a\xa7\x82\xce\x5a\x85\xf6\xe7\x02\x7f\xf5\xa2\x09\xfe\x43\x01\x74\x6e\xec\x3c\x8d\xc1\x94\x56\xc2\x7c\xf2\x14\x62\xbd\xf2\x49\x4e\xb9\x7b\x3c\x3c\xca\x05\x83\x71\x37\x5b\xea\xe2\x92\xb3\xb3\xb0\x47\xf7\x8f\xf1\xd0\x26\x14\x70\xe5\x82\xab\x42\x00\x6a\x03\x9c\xd6\x35\xf5\x7d\x86\x6f\x02\x34\x40\x1c\x0d\xd0\x4d\x70\xe8\x20\xb0\x86\xd6\x35\x2e\xe7\x72\xe5\x74\xdc\x04\x1a\x31\x30\x94\x8b\x7d\x7f\x08\x48\xf4\x44\x98\xaf\x41\x24\xf7\x5c\x08\xe4\x6d\xd0\x92\x88\x5b\x44\xcb\x01\x27\x68\xa3\xb1\xd6\x1e\x69\xb4\x3d\x9e\xc8\x1a\x5e\xd3\xcf\x39\xe2\xf7\x96\x23\x3e\x74\x1c\x31\x3e\xa0\x05\x64\x26\x92\xad\x1b\x72\x70\xd1\x24\x8e\x9a\x75\xec\x82\xd5\x3e\x5b\x90\x0d\xc4\x4b\xe5\x98\xea\xb3\x37\xda\xd0\x07\x80\x93\xec\x7d\x68\xe6\x5c\x93\x78\xca\x4b\x16\x62\x8e\x89\x3d\x26\xb2\x3e\x2d\xc5\x4a\xae\xc2\xad\x58\x21\xa4\x06\x6d\x42\x6c\x14\x26\x64\xcc\xa7\xe1\x24\x9e\x53\xfd\xc9\x2e\x43\x88\x1b\xc3\x20\xde\xb4\x9d\x19\x59\x9e\xb5\xcb\x16\x12\x07\x6d\x3c\x89\x3d\x9d\xef\xf5\x88\x29\x63\x3b\x55\x3e\xbc\xf6\x70\xe2\x62\xce\x05\x0b\x83\xd4\xcf\x7e\xc5\x99\x99\x67\xf8\xfc\xc3\x87\xff\xc3\x79\x6a\x54\x9e\x1a\x96\xa7\x95\x68\x03\x19\xae\x8d\x77\x1a\x9c\xa7\x82\x1f\x56\x0f\xb9\x81\x05\xce\x77\x22\xac\x65\x25\xc4\x50\xf1\xd9\xdc\x20\xcb\x96\xc3\x45\x65\x80\x21\xbd\xa0\x42\xe0\x3c\x85\x45\x1e\x0c\x2c\x7e\xb7\xfb\xe9\x08\x16\x79\x13\x6f\xa5\xda\x28\x59\xce\xf2\x2f\x9f\xd3\x51\x53\x4c\x27\x0a\x8d\xf2\x74\x24\xf8\xcb\x0f\x6f\xc3\xd0\xe3\x00\xfe\x45\x17\xf0\x26\x10\x96\x8a\x4b\xc5\xcd\xfa\x38\x8c\x3f\x9b\xd6\x37\x81\xa2\x60\x09\xd4\xe8\xe3\x48\xbe\xf9\xc6\xd7\x06\xc2\x2a\x45\xad\x97\x5d\xc9\x6f\x40\x99\x35\xd0\xe6\x10\xea\x21\xbc\xe3\xa5\x01\xf5\x40\x05\xf9\x11\xd4\x2f\x8d\xd0\xff\x16\xb1\xe1\x0b\x90\x95\x39\x81\xf4\xca\xb7\xbe\x3a\xc4\xfe\x69\xee\x60\x35\x51\xc0\x1d\x3d\x85\xec\x93\x17\x78\x6d\x64\x1e\x8d\x36\x54\x79\x34\x17\x87\x50\xbb\x46\x1b\xaa\x9f\x80\x7b\xe9\x85\xde\xc4\x4d\x7c\xfc\x73\x12\x87\xa9\x5e\xdd\x49\x1c\x0c\x6a\x0c\x2c\x96\xa7\xdc\xf5\x63\xd3\xfa\xf6\xa6\x45\x85\x90\xab\x3b\xb7\x6b\xa7\xcd\xeb\xa3\x15\x42\x4e\xe8\x6d\x4c\xcc\x67\x9e\x3f\x34\xb4\x7d\x91\x1f\x98\xdb\x1f\x56\x14\xe9\xb7\x31\x3a\x8f\xce\x65\xba\x3f\xc4\xbf\x27\xe1\xe1\xe3\x63\xf0\xbf\xd2\x9f\xa0\x1f\x55\x22\x4f\x47\x36\x0e\x18\xd9\x80\x60\xe4\x22\x85\x1c\x93\xd8\x86\x42\x21\xa9\x41\x68\x40\x47\x63\x8f\x6d\xa0\x71\x10\x81\xf4\x63\x8f\x78\xce\x19\x84\x3b\xd7\x66\x57\x54\xdf\xfb\x94\xcd\xce\xe5\x99\x09\x9b\x53\xf1\xb7\x4b\xd7\x1c\xaa\xe7\x5c\x93\x6d\x43\x85\xae\xa6\x39\xb1\xf7\x2b\xda\x03\xf2\x30\x29\x2b\x75\x97\xe3\x9d\x3a\xb8\x4a\xdd\xcb\xf6\x9a\x03\xec\x05\x34\x75\x67\xce\xf3\x92\x4f\xf5\x68\x25\x3f\xbb\x3d\x7a\xf9\x4c\x16\x6f\x59\xb9\x53\xba\xcb\x87\xcf\x98\xfa\x3e\x3f\xbd\xd4\xf5\xd9\x0b\x69\x7c\x52\xae\xee\x35\xbe\xda\x45\x99\xcf\xc1\x3d\x3d\xbd\xe4\xa5\x99\x55\xfb\x98\x5c\xd7\xb9\xfa\x0b\x64\xba\x56\xcf\x53\xf2\xdc\xff\xef\xdd\x85\xf9\xc7\x89\xac\xf7\x30\xb2\xfb\x3e\xe1\x5e\x49\x62\x05\x42\x52\x16\xee\x5e\x9d\x1d\x6b\x72\x04\xbd\xdb\x50\x47\xb4\x32\x52\xc1\x54\x81\x9e\x67\x76\xb7\x5d\x72\xdd\xab\x3c\xf6\x3c\x63\x33\xdf\xb8\x98\x83\xbb\x2d\xb5\x9d\xb2\x2c\xeb\x75\x39\x3b\x0b\x3d\xf2\x90\xec\xa8\x5f\xf1\x92\xc9\x55\xac\xa1\x0d\xec\x1b\xb9\xe8\x1c\xfe\x41\x88\x33\xb6\xdf\xf6\x35\x35\x9d\x0a\x01\x54\xb5\xdd\x7a\x22\xe4\x60\x06\xa4\x26\x51\xd3\x6b\xef\x9e\xb3\x5b\xc9\x6d\xc3\x17\x46\x36\x85\x2c\xb5\x14\x10\x0b\x39\x0b\xa9\x9a\xb9\xa7\x37\x4d\xa2\xc7\xbf\x41\x75\x4f\x3b\x8d\xb9\x36\x0f\x51\x9c\x25\xdd\x38\x91\xbf\x16\x4d\x3e\x2a\x45\xd7\x31\x5d\x2e\xc5\x3a\x74\xde\xd5\x0d\x19\x6b\xc1\x0b\x08\xcf\x7b\xcf\x53\x8f\xdc\xfa\xba\x26\xf5\x76\xce\x3b\x97\x34\xdd\x8c\x39\xfb\x95\x67\xb5\x83\x09\x71\x76\x1a\xdc\x13\x4d\xaf\x87\xb9\xe7\x6c\xbf\x8a\xd8\x07\x0c\xaf\x8c\xb7\x26\xe3\xff\x06\x00\x00\xff\xff\x2c\x4b\x55\xf9\x9f\x1d\x00\x00"

func assetsJsManagerMinJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsManagerMinJs,
		"assets/js/manager.min.js",
	)
}

func assetsJsManagerMinJs() (*asset, error) {
	bytes, err := assetsJsManagerMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/manager.min.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesConfigMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xbd\x6e\x13\x4f\x14\xc5\x4f\xfc\xcf\xbf\xb1\xa0\xa1\xa6\xb8\x14\x44\x20\x34\x61\xd7\x26\x52\xd8\x78\x13\x44\x3e\x24\x44\xac\x84\xc8\x50\xd1\x8c\xec\xb1\xbd\x8a\x3d\x63\x66\x67\xf9\x90\x22\x91\x8f\x22\x5d\x68\xa0\xa1\xe1\x15\x92\x10\x4b\x16\x81\x8d\xc4\x13\xdc\x79\x01\x9e\x05\xad\xf3\x81\x28\x98\xea\x9c\x73\xef\xef\xdc\xf9\x75\x63\xf2\x13\x00\x4c\x02\xb8\x09\xa0\x06\xe0\x7f\x00\x2f\x71\xfe\x06\x17\xf9\x2b\x00\x55\x00\x07\x00\xae\x03\xf8\x09\xa0\x3b\x01\x30\x80\x65\x00\x0f\x4b\xc0\x33\x00\xef\x4b\xc0\x35\x00\xbe\x04\x4c\x00\x28\x5d\xf4\x14\xfd\xff\x15\xa2\x69\x74\x3b\xe9\x4c\x2e\xa9\xb6\xcc\x7a\x8e\xde\x18\xbb\xa9\x6c\x4a\x4d\x93\x69\x77\x35\xcc\xac\x74\x89\xd1\xd4\x36\x96\x5c\xd2\xdc\x54\x96\x12\x4d\xad\x24\x1d\x48\xd7\xec\x2a\x4b\xa6\x7d\x49\x5e\x32\x6b\xae\x5b\xb8\x0d\x35\x30\xd6\x89\x7a\xda\x49\x5a\xe2\x71\xd6\x49\x45\xc3\x44\xd4\x52\xaf\x1f\x6d\x26\x5d\xd9\x37\xd3\x36\x2b\xaf\xaf\x35\xc4\xa2\x55\xe3\x13\x62\x49\x3a\x15\x51\x25\x08\x67\x45\x50\x15\x95\x2a\x55\xaa\xd1\xcc\xcc\xbd\xa0\x1a\x04\xe5\x55\x99\x3a\xd1\xb0\x52\xa7\x3d\xe9\x8c\x8d\xe8\xe9\xb8\x83\xea\x99\x95\x7d\xd3\x32\x54\xfb\xab\x78\xbe\xbc\x2a\x75\x27\x93\x1d\x25\x1a\x4a\xf6\x23\xba\xf2\x11\x6d\x64\x69\x9a\x48\x5d\xae\x3f\xa9\x2f\x8b\x17\xca\xa6\x89\xd1\x11\x85\xd3\x41\x79\xd1\x68\xa7\xb4\x13\x8d\x77\x03\x15\x91\x53\x6f\xdd\xfd\x41\x4f\x26\x7a\x8e\x9a\x5d\x69\x53\xe5\xe2\xe7\x8d\x15\x31\xfb\x67\xaf\xf8\x4f\x5b\x59\xb1\xac\x9b\xa6\x95\xe8\x4e\x44\xe5\xf5\x5e\x66\x65\x4f\xac\x18\xdb\x4f\x23\xd2\x83\xb1\x4d\xe3\xea\x1c\x9d\xcb\x58\xdf\x0e\x83\x38\x0e\x69\x6a\x8a\x0a\x19\xdc\x8a\xc3\x90\x16\x28\xa0\x68\xec\xe7\xe3\xca\xe5\xa8\x16\x3f\x28\xe4\x9d\xf1\x5a\x2d\x0c\x68\x6b\xeb\x1c\x99\x8f\x2b\xc1\x5d\x5a\xa0\x90\x22\xaa\xcc\x81\x3f\x73\xce\xa7\x3c\xf2\xfb\x3c\xf4\x3b\x7e\x97\x8f\x39\x27\xce\xf9\xc8\x6f\xf3\x21\x1f\x71\xee\x77\xfd\x3e\x8f\xf8\x1b\xe7\x7c\x4c\x7c\xc6\xb9\xf0\x7b\xfc\xbd\x80\xfc\x3e\x1f\xf2\x0f\x1e\xf9\x03\xf0\x17\x1e\xfa\x6d\x1e\x71\xce\x27\xc4\x27\x7c\xea\x3f\x90\xdf\x1d\x63\x45\x7e\x48\x05\x7b\xc2\x23\xbf\xc3\x67\x3c\x1c\x57\x16\xf9\xf0\x9f\x97\xc0\x1f\xfd\xb6\xdf\xe3\xaf\x9c\xf3\x10\xbf\x03\x00\x00\xff\xff\xcb\x67\x1c\x8f\xde\x02\x00\x00"

func localesRuLc_messagesConfigMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesConfigMo,
		"locales/ru/LC_MESSAGES/config.mo",
	)
}

func localesRuLc_messagesConfigMo() (*asset, error) {
	bytes, err := localesRuLc_messagesConfigMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/config.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesManagerMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x5f\x6c\x5b\x57\x19\xff\x75\xd8\xc6\x71\x12\x18\x2b\x8c\xf2\xff\xec\x4f\xbb\x8d\xe1\xcc\x4e\x98\x54\xb9\x75\x42\xc8\x5a\x5a\xd1\x94\x34\x71\xe8\x2b\x77\xf1\x49\x72\x15\xfb\xde\x70\xef\x75\xd2\x8a\x3d\xc4\x8e\xa6\x16\x0c\x2b\xeb\x98\x06\x48\xdb\x68\x27\x24\x84\x90\x70\xa3\xb8\x75\xd2\xc4\x01\x09\x84\x78\xe2\x3b\xe2\x9d\x07\xc4\x1b\x7b\x41\x3c\x31\x24\x84\xbe\x73\x8e\x13\xa7\x6d\x10\x9b\xa5\xdc\x73\xbe\xf3\xfd\xfb\x7d\xbf\xef\xfb\xf2\x97\x47\x62\xaf\x03\xc0\x20\x80\xcf\x02\xf8\xd5\x21\x60\x0c\xc0\xc9\x0f\x41\xff\xce\xc4\x80\x0f\x03\x38\x1b\x03\xf8\xe9\x42\x0c\x48\x01\x98\x8e\x01\xbd\x00\xbe\x65\xcf\x52\x0c\x48\x02\xb8\x64\xe5\x6a\x0c\x88\x03\xf8\x41\xcc\xc4\x7d\x2d\x06\x1c\x01\xd0\x88\x01\x9f\x06\xf0\x47\x1b\xf7\x6f\x31\x20\x01\xe0\x5d\x6b\xff\x4f\xeb\xff\xaf\x18\xd0\x0f\x20\x1e\x07\x3e\x02\xe0\x70\x1c\x78\x08\xc0\xe3\x71\x93\xff\x68\x1c\xe8\x03\x90\x89\x03\x3d\x00\xf2\x71\x13\xe7\x6b\x71\x20\x06\xe0\x7c\x1c\x38\x0c\x60\x2a\x6e\x70\xcd\x59\xbf\xc5\x38\xf0\x51\x00\xdf\x89\x9b\xfc\x75\x1b\xff\x35\x2b\xdf\xb4\x71\x7e\x69\xe3\xdc\x8a\x1b\x5c\xb7\xad\x7e\x2b\x6e\xf8\xf9\x9d\x8d\x93\x4c\x18\xbc\x47\x12\x06\xef\x93\x56\x1e\x4c\x18\x5c\xc3\x09\x83\xf3\x4c\xc2\xd8\x4f\x5b\x59\x26\x4c\xde\xc0\xda\x55\xad\x7f\xdd\xbe\xff\x24\x01\x3c\x0c\xe0\x17\x36\xde\x46\x02\x98\x3f\x04\xfc\xde\xbe\x0f\x24\xcd\x39\x92\x04\x8e\x02\x98\x48\x02\xcf\x00\x58\x4a\x02\x5f\x00\xf0\xb3\xa4\x89\xf3\x9b\xa4\xe1\xff\x4f\x56\x7e\x37\x09\x9c\x05\xf0\xef\x24\x30\x02\xe0\x54\x0f\x30\x0e\xe0\xe5\x1e\xa3\xff\xb3\x3d\xff\xda\x63\x70\xfe\xa3\x07\xf8\x24\x80\xff\xf4\x00\x9f\x02\xf0\x68\x0a\x10\xcc\x7b\xca\xf4\xe3\x42\x0a\xf8\x1c\x80\x42\xca\xe4\x0d\x52\xc0\x23\x00\xae\xa7\x80\x8f\x03\xf8\x79\xca\xf0\xb9\x99\x02\x8e\x03\xf8\xad\xd5\xbf\x97\x02\x3e\x01\xa0\xbf\xd7\xf8\x3d\xd1\x6b\xf2\x8e\xf5\x02\x4f\x02\x98\xec\x35\xf5\x2d\xf7\x1a\x1c\x57\xed\xf9\xba\x3d\x6f\x5a\xfb\x5f\xf7\x02\xd7\x01\xb4\x7b\x4d\xbe\x0b\x7d\xa6\xcf\xb3\x7d\x66\xde\xbe\xdd\x07\x3c\x0a\xe0\x7b\x7d\xc6\xfe\x86\x95\x1b\x7d\xc0\x13\x00\xfe\x60\xdf\xff\xde\x67\xea\x78\xcf\xca\x47\xfa\x8d\xdd\x53\xf6\x1c\xee\x37\xfa\xe9\x7e\xa3\x0f\xfb\x81\x43\x66\x45\xf0\x1c\x4c\x0f\x98\x9f\xa7\x61\xe6\xad\xfb\xf7\x79\x98\x19\x62\xdc\x0f\xd9\x37\xe6\xe4\x71\x18\x8c\x59\x98\x9a\x07\xba\x7c\xb8\x97\x99\x2e\x99\x31\x30\x5f\xcc\xfd\xc3\xf6\xed\xb0\xdd\x59\xae\xe3\x18\x80\xc7\x00\x7c\xc6\xea\x78\x9f\x79\xae\xbe\x08\xb3\x6f\xcc\x0d\xe3\x67\xec\x5f\xb2\x36\x3c\x57\x76\xcd\xf5\xec\x71\x9f\x79\xe6\x3f\x06\x20\x6d\xdf\x9f\xb2\x27\x73\xfa\x2c\xcc\x0e\x74\x7e\xdc\x47\x9e\x69\xee\x1f\x46\x67\x22\xd7\xf7\x42\x8c\x16\x8b\xfc\x27\x96\xfd\x60\x41\x06\x5d\xd7\x10\xa3\xa5\x92\xbf\x2c\xc2\xc8\x09\x22\x8c\x46\x91\x2c\x2f\x46\x21\x46\x2b\x91\x1f\xc8\xd9\x40\x86\xf3\x18\x2b\xf9\xa1\xc4\x98\xef\xcd\xba\x41\x59\x04\xb2\xec\x2f\x49\xe1\x94\x4a\xa2\xe4\x86\x91\xf4\x38\xc6\x03\x94\x91\x13\x2e\x3c\x50\xd1\xc9\x3b\x16\x48\x27\x92\x45\x9c\x5a\x92\x5e\x14\xe2\xb4\x1b\x48\xfd\x0d\x23\x31\xeb\x06\xb2\x68\xef\x1a\x98\x2c\xe2\x8c\x5b\xec\x0e\x7c\xf6\x05\x9c\x73\x76\x4d\xf5\xb5\x63\x79\x6e\x17\xd6\x39\x7f\x66\x41\x16\x71\xde\x29\x4b\x9c\xaf\x94\x5f\x94\x81\xf0\xe4\x72\x07\x41\x0e\x13\x81\xeb\x07\x6e\x74\x19\x93\xbb\xf0\x30\x29\x17\xa5\x13\x09\xd7\x8b\x64\xb0\xe4\x74\xe4\x10\x53\xf3\xfe\x72\x57\xfe\x29\x9b\x6c\x2a\x72\xa2\x4a\x88\x82\x13\x2e\xe8\x4f\x88\x82\x5b\x96\x7e\x25\xc2\x45\xb7\x54\x12\x2f\xca\x07\x12\x26\xe4\xa5\x19\xb9\x18\x89\xa2\x9c\x75\x2a\xa5\x68\x57\x31\x20\x46\x03\x29\x2e\xfb\x15\x11\x56\x02\x39\x82\x30\x72\xa2\x30\xb6\x57\x90\x91\x4d\x1e\x73\xbf\x68\xd9\x64\x54\xb1\x31\xc7\x9b\x91\x25\x73\x3f\xed\xb8\xf6\x36\x11\xf8\x33\x32\xb4\x26\xa6\x9c\x8b\x8e\x1b\x19\x79\xaa\x32\xb3\xa7\x9c\xf6\x8a\x72\xd6\xf5\x64\xd1\x88\xda\xca\x90\xd5\x09\x6d\xa5\x4e\x48\x2b\xee\xf9\xd9\x07\xed\x39\x29\x17\xfd\x20\x4a\x8f\x87\x73\x6e\x31\xfd\xd5\xca\x5c\x98\x2e\xf8\x39\x51\x94\x4b\x5f\x59\x70\xe7\x9d\xb2\x3f\x10\x54\x52\x13\xdf\x28\xa4\xf5\x20\xb8\xbe\x97\x7e\xc1\x89\x64\x4e\x0c\x66\xb2\xc7\xd3\x99\xa1\xf4\xe0\x90\x18\x1c\xca\x3d\xff\xfc\xb3\x99\xa1\x4c\x26\xc5\x1d\x4e\x17\x02\xc7\x0b\x4b\x4e\xe4\x07\x39\xf1\x75\x1d\x43\x8c\x57\x02\xa7\xec\x17\x7d\x71\x72\x5f\xe0\xe1\xd4\x39\xc7\x9b\xab\x38\x73\x32\x5d\x90\x4e\x39\x27\x76\xe5\x9c\x98\xac\x84\xa1\xeb\x78\xa9\xf1\xb3\xe3\xa7\xd2\xdf\x94\x41\xe8\xfa\x5e\x4e\x64\x07\x32\xa9\x31\xdf\x8b\xa4\x17\xa5\x0b\x97\x17\x65\x4e\x44\xf2\x52\xf4\xdc\x62\xc9\x71\xbd\x13\x62\x66\xde\x09\x42\x19\xe5\xa7\x0b\xa7\xd3\xc7\xf7\xec\x18\xcf\xac\x0c\xd2\xa7\xbc\x19\xbf\xe8\x7a\x73\x39\x91\x9a\x28\x55\x02\xa7\x94\x3e\xed\x07\xe5\x30\x27\xbc\x45\x2d\x86\xf9\xa1\x13\xc2\x5c\xf3\xde\xd1\x6c\x26\x9f\xcf\x8a\x63\xc7\x04\x5f\x33\x8f\xe5\xb3\x59\x31\x22\x32\x22\xa7\xe5\xe1\xfc\x60\x47\x75\x32\xff\x65\xbe\x3e\xad\xcd\x4e\x66\x33\xe2\xa5\x97\x8c\xcb\x70\x7e\x30\xf3\x8c\x18\x11\x59\x91\x13\x83\x27\x40\x3f\xa2\x26\x6d\xa8\xaa\xaa\xd1\x1a\xb5\xd4\x35\x7e\x68\xd3\x2d\x6a\x68\xb1\xa6\xbe\x7f\xdf\x83\x60\x51\xad\x50\x83\x6e\x51\x5b\xd5\xd4\x15\x6a\xd1\xe6\xff\x67\x45\x6d\x5a\x03\xbd\x4a\x77\xa9\x45\xb7\xa9\x41\x1b\xea\x2a\xb5\x68\x43\xd0\x1d\x6a\xd0\x8e\x5a\x55\x55\x8e\xf4\x36\xb5\x69\x47\xd5\x55\x8d\x36\xa9\x05\xfa\x21\xad\xa9\x1a\xb5\x75\xf8\x6d\x8e\x40\x77\xa9\x49\xdb\xd4\xa2\x26\xe8\x0d\x6a\xd0\xa6\x5a\x61\x6b\x86\xca\xae\xeb\xba\x94\xa6\x5a\xa1\xdb\xb4\xde\xb1\x14\x6a\x95\xd6\xa9\xd1\x71\x55\xd7\x04\xad\xa9\x2a\x35\xd5\xcb\x42\x55\xe9\xae\x5a\x55\x57\xa9\xa1\x6a\xd4\xd4\x16\x1b\x1f\x2c\x92\x2e\x63\x9d\x1a\xea\xca\x07\xf4\x3f\x90\xb2\x1b\xd4\xa6\x3b\xda\x6d\x9b\xda\x46\xbc\xa5\x19\xd2\x1d\xbb\xae\xea\x74\x87\x0d\x55\x9d\x13\x73\xc2\x35\x55\x67\x5e\xd7\x3a\x9a\x7b\xde\xf7\xf1\x7d\x63\x8f\x41\x8b\xa5\xab\x12\x6a\xf1\xbf\x4b\x2e\x87\x79\xa2\x26\xad\xeb\x32\xee\x8d\x7d\x9f\xf6\x9e\x0c\xfb\x19\x6e\x99\x21\x68\x73\x83\xd5\x8a\xee\xe9\x26\x35\x40\x3f\xa6\x2d\xae\xe7\xa7\xd4\x66\x23\x75\x85\x9a\x76\x30\xdb\xc2\xb4\x5e\xd5\xff\x27\x4d\x6f\xab\x15\x6a\x51\x9b\xbf\x9c\x49\xd5\x40\xef\x58\xb2\x5b\x5d\xe5\x71\xa2\x6d\x6d\xb0\x42\x6b\xac\x15\xb4\xa3\xa3\xd7\xb4\x6f\xc3\x74\xcf\x8a\x86\x53\x86\xda\xe0\xa2\x0e\x64\x49\x8f\x22\x57\xfc\x5d\xdd\xd8\x06\xe8\x86\xaa\x69\xfb\x55\x55\x35\x5a\x63\xda\xe8\x16\x5a\xa0\x9b\xbc\x08\xb4\x45\x0d\xb5\xca\x80\x5f\xe5\xf9\xe0\xeb\xbe\x41\x51\xf5\x4e\xd2\xfb\xc6\xb5\xa5\x71\x08\x6a\x31\xd7\x74\x57\xbd\xc2\xbc\x99\x59\xa3\xad\x07\x4e\xb7\x2e\x37\xad\x56\x69\x8b\x89\x66\x48\x7a\x12\x5f\x19\x10\x3c\x4a\x9c\xd7\x4c\xad\xce\x3b\x72\x7f\xfb\xf4\x82\xbc\xb1\x37\xeb\x6f\x1d\xd4\x8f\xdd\xed\xd4\x34\x37\x55\x4d\x55\xb9\xbf\x6f\x52\xd3\xd4\x66\xd8\xe0\xf1\xdd\xd1\x2d\xdf\x56\xd7\xf6\xac\xde\xa2\xdb\xd4\xd2\x0c\x34\x55\x6d\x7f\x87\xec\xe6\x80\xde\x51\x55\xda\xa1\xa6\xba\x6a\xf6\xe2\x4d\x6e\x0a\xff\xf3\x58\xd1\xa3\xd8\xb4\x4b\xb6\xcd\x43\x7f\x4f\xc0\x03\xc1\x1d\x80\xe6\xfd\x84\xfe\x6f\x00\x00\x00\xff\xff\x76\x75\x5a\xb4\x82\x0d\x00\x00"

func localesRuLc_messagesManagerMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesManagerMo,
		"locales/ru/LC_MESSAGES/manager.mo",
	)
}

func localesRuLc_messagesManagerMo() (*asset, error) {
	bytes, err := localesRuLc_messagesManagerMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/manager.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWorkersMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x4f\x6b\x14\x31\x18\xc6\x9f\x2d\x8a\x30\x47\x0f\x9e\x3c\xbc\x1e\x2c\x8a\xa6\x26\x33\x16\x4a\x76\xb3\x15\x6b\x0b\x62\x17\xd7\x32\x2a\x1e\x43\x37\xce\x0e\xdd\x49\x86\x24\x23\x0a\x3d\x88\x17\x3f\x81\x57\x3f\x83\xbd\x2d\x1e\x3c\xf8\x09\xb2\x5f\xc0\xcf\x22\x3b\xeb\xdf\xe7\xf4\xfc\xc8\x2f\x0f\xef\x8f\xab\x97\x3e\x01\xc0\x16\x80\xeb\x00\xee\x02\xb8\x0c\x60\x84\x4d\xa6\x00\xae\x00\x78\x06\x60\x3e\x00\x5e\x01\xb8\x06\xe0\xfb\x00\x18\xfc\x72\xb6\xf0\x4f\x5e\x3a\x7f\x66\x7c\xc0\x89\x69\x9d\x8f\x6c\x12\xaa\x7a\xc6\x1e\x76\x55\x60\xa5\x93\x34\x33\x6f\x1e\x9c\xd5\x73\xdd\xb8\x1d\xdf\x65\xd3\xa7\x25\x3b\xf0\x46\xc7\xda\x59\xf6\x48\x47\x23\x29\xe7\x62\x8f\xf1\x82\xe5\x05\xe5\x85\xdc\xdd\xbd\xc3\x0b\xce\xb3\x63\x1d\x22\x2b\xbd\xb6\x61\xa1\xa3\xf3\x92\x9e\xf4\x1b\x34\xe9\xbc\x6e\xdc\xcc\xd1\xe8\xbf\xe1\x71\x76\xac\x6d\xd5\xe9\xca\xb0\xd2\xe8\x46\xd2\x1f\x96\x74\xd2\x85\x50\x6b\x9b\x4d\x1e\x4f\x0e\xd9\x0b\xe3\x43\xed\xac\x24\xb1\xc3\xb3\x03\x67\xa3\xb1\x91\x95\xef\x5a\x23\x29\x9a\xb7\xf1\x5e\xbb\xd0\xb5\x1d\xd2\xe9\x5c\xfb\x60\xa2\x7a\x5e\x1e\xb1\xbd\xbf\xde\xfa\x9e\xd7\xc6\xb3\x43\x7b\xea\x66\xb5\xad\x24\x65\xd3\x45\xe7\xf5\x82\x1d\x39\xdf\x04\x49\xb6\xed\x31\xa8\x62\x48\x9b\xaa\xec\x4d\xc1\x95\x12\xb4\xbd\x4d\xeb\xca\x6f\x28\x21\x68\x9f\x38\xc9\x9e\xc7\x2a\xff\xfd\x34\x52\xf7\xd7\xf5\x56\xaf\x8d\x04\xa7\xf3\xf3\xcd\x97\xb1\xca\xf9\x6d\xda\x27\x41\x92\xf2\x21\xd2\xe7\x74\xb1\x7a\x9f\xbe\xa4\x8b\xf4\x6d\xf5\x61\xf5\x31\x2d\xd3\xd7\xb4\xc4\xcf\x00\x00\x00\xff\xff\x4e\x6a\x2e\xd8\xd9\x01\x00\x00"

func localesRuLc_messagesWorkersMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWorkersMo,
		"locales/ru/LC_MESSAGES/workers.mo",
	)
}

func localesRuLc_messagesWorkersMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWorkersMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/workers.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/manager.html": templatesViewsManagerHtml,
	"assets/js/manager.min.js": assetsJsManagerMinJs,
	"locales/ru/LC_MESSAGES/config.mo": localesRuLc_messagesConfigMo,
	"locales/ru/LC_MESSAGES/manager.mo": localesRuLc_messagesManagerMo,
	"locales/ru/LC_MESSAGES/workers.mo": localesRuLc_messagesWorkersMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"manager.min.js": &bintree{assetsJsManagerMinJs, map[string]*bintree{}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"config.mo": &bintree{localesRuLc_messagesConfigMo, map[string]*bintree{}},
				"manager.mo": &bintree{localesRuLc_messagesManagerMo, map[string]*bintree{}},
				"workers.mo": &bintree{localesRuLc_messagesWorkersMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"manager.html": &bintree{templatesViewsManagerHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
