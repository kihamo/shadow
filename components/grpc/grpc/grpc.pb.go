// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	grpc.proto

It has these top-level messages:
	VersionRequest
	VersionResponse
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VersionRequest struct {
}

func (m *VersionRequest) Reset()                    { *m = VersionRequest{} }
func (m *VersionRequest) String() string            { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()               {}
func (*VersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type VersionResponse struct {
	Name          string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version       string                     `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Build         string                     `protobuf:"bytes,3,opt,name=build" json:"build,omitempty"`
	BuildDatetime *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=build_datetime,json=buildDatetime" json:"build_datetime,omitempty"`
	StartDatetime *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=start_datetime,json=startDatetime" json:"start_datetime,omitempty"`
	Uptime        *google_protobuf1.Duration `protobuf:"bytes,6,opt,name=uptime" json:"uptime,omitempty"`
}

func (m *VersionResponse) Reset()                    { *m = VersionResponse{} }
func (m *VersionResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()               {}
func (*VersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VersionResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionResponse) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func (m *VersionResponse) GetBuildDatetime() *google_protobuf.Timestamp {
	if m != nil {
		return m.BuildDatetime
	}
	return nil
}

func (m *VersionResponse) GetStartDatetime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartDatetime
	}
	return nil
}

func (m *VersionResponse) GetUptime() *google_protobuf1.Duration {
	if m != nil {
		return m.Uptime
	}
	return nil
}

func init() {
	proto.RegisterType((*VersionRequest)(nil), "shadow.grpc.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "shadow.grpc.VersionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for Grpc service

type GrpcClient interface {
	Version(ctx context.Context, in *VersionRequest, opts ...grpc1.CallOption) (*VersionResponse, error)
}

type grpcClient struct {
	cc *grpc1.ClientConn
}

func NewGrpcClient(cc *grpc1.ClientConn) GrpcClient {
	return &grpcClient{cc}
}

func (c *grpcClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc1.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := grpc1.Invoke(ctx, "/shadow.grpc.Grpc/Version", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Grpc service

type GrpcServer interface {
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
}

func RegisterGrpcServer(s *grpc1.Server, srv GrpcServer) {
	s.RegisterService(&_Grpc_serviceDesc, srv)
}

func _Grpc_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServer).Version(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shadow.grpc.Grpc/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grpc_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "shadow.grpc.Grpc",
	HandlerType: (*GrpcServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _Grpc_Version_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xbb, 0x4e, 0xc3, 0x30,
	0x18, 0x85, 0x69, 0xe9, 0x45, 0xb8, 0xa2, 0x20, 0x8b, 0x21, 0x04, 0x04, 0x55, 0xa7, 0x2e, 0xd8,
	0xa2, 0x3c, 0x01, 0xa8, 0x82, 0x8d, 0x21, 0x42, 0x0c, 0x2c, 0xc8, 0x49, 0x4c, 0x62, 0x51, 0xfb,
	0x37, 0xbe, 0xc0, 0x5b, 0xf0, 0xcc, 0x28, 0x76, 0x52, 0xae, 0x12, 0x4b, 0x64, 0xff, 0xff, 0xf9,
	0x8e, 0x4e, 0x8e, 0x11, 0xaa, 0x8c, 0x2e, 0x88, 0x36, 0xe0, 0x00, 0x4f, 0x6c, 0xcd, 0x4a, 0x78,
	0x23, 0xcd, 0x28, 0x3d, 0xad, 0x00, 0xaa, 0x35, 0xa7, 0x61, 0x95, 0xfb, 0x27, 0xea, 0x84, 0xe4,
	0xd6, 0x31, 0xa9, 0xa3, 0x3a, 0x3d, 0xf9, 0x29, 0x28, 0xbd, 0x61, 0x4e, 0x80, 0x8a, 0xfb, 0xf9,
	0x3e, 0x9a, 0xde, 0x73, 0x63, 0x05, 0xa8, 0x8c, 0xbf, 0x78, 0x6e, 0xdd, 0xfc, 0xbd, 0x8f, 0xf6,
	0x36, 0x23, 0xab, 0x41, 0x59, 0x8e, 0x31, 0x1a, 0x28, 0x26, 0x79, 0xd2, 0x9b, 0xf5, 0x16, 0x3b,
	0x59, 0x38, 0xe3, 0x04, 0x8d, 0x5f, 0xa3, 0x2c, 0xe9, 0x87, 0x71, 0x77, 0xc5, 0x07, 0x68, 0x98,
	0x7b, 0xb1, 0x2e, 0x93, 0xed, 0x30, 0x8f, 0x17, 0x7c, 0x89, 0xa6, 0xe1, 0xf0, 0x58, 0x32, 0xc7,
	0x9b, 0x98, 0xc9, 0x60, 0xd6, 0x5b, 0x4c, 0x96, 0x29, 0x89, 0x11, 0x49, 0x17, 0x91, 0xdc, 0x75,
	0xff, 0x90, 0xed, 0x06, 0x62, 0xd5, 0x02, 0x8d, 0x85, 0x75, 0xcc, 0xb8, 0x4f, 0x8b, 0xe1, 0xff,
	0x16, 0x81, 0xd8, 0x58, 0x9c, 0xa3, 0x91, 0xd7, 0x01, 0x1d, 0x05, 0xf4, 0xf0, 0x17, 0xba, 0x6a,
	0x0b, 0xca, 0x5a, 0xe1, 0xf2, 0x16, 0x0d, 0x6e, 0x8c, 0x2e, 0xf0, 0x35, 0x1a, 0xb7, 0xbd, 0xe0,
	0x23, 0xf2, 0xe5, 0x11, 0xc8, 0xf7, 0x02, 0xd3, 0xe3, 0xbf, 0x97, 0xb1, 0xca, 0xf9, 0xd6, 0x15,
	0x7d, 0x38, 0xab, 0x84, 0xab, 0x7d, 0x4e, 0x0a, 0x90, 0xf4, 0x59, 0xd4, 0x4c, 0x02, 0x8d, 0x08,
	0x2d, 0x40, 0x6a, 0x50, 0x5c, 0x39, 0x4b, 0x1b, 0x3a, 0x7c, 0xf2, 0x51, 0xc8, 0x76, 0xf1, 0x11,
	0x00, 0x00, 0xff, 0xff, 0x60, 0x6c, 0x42, 0x0b, 0x06, 0x02, 0x00, 0x00,
}
